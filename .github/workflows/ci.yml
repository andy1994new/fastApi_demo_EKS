name: CI for FastAPI Microservices

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_USER: andyg
    #       POSTGRES_PASSWORD: ""
    #       POSTGRES_DB: postgres
    #       POSTGRES_HOST_AUTH_METHOD: trust
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd="pg_isready -U andyg"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=5

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v4
      with:
        repository: andy1994new/fastApi_demo_EKS

    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt

    # - name: Format code with black
    #   run: |
    #     make format
    # - name: Analysing the code with pylint
    #   run: |
    #     make lint

    # - name: Run tests
    #   env:
    #     ENV: local
    #   run: |
    #     make test

    - name: Get Git Version
      run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
    - name: Login to DockerHub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and Push Images
      run: |
        sh update.sh $VERSION user
        bash update.sh $VERSION product
        sh update.sh $VERSION order

    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker/test/docker-compose.yml"

    - name: Run Integration Tests
      run: |
        docker compose exec -T test-app bash -c "pwd"
        # docker compose exec test-app pytest app/test.py


    # - name: Checkout other repositories
    #   uses: actions/checkout@v4
    #   with:
    #     repository: andy1994new/argo
    #     token: ${{ secrets.GH_TOKEN }}

    # - name: Modify the deployment.yaml
    #   run: |
    #     git config --global user.email "ci-bot---1@example.com"
    #     git config --global user.name "ci-bot---1"
    #     sed -i -e "s/andy2025\/user_service:.*/andy2025\/user_service:$VERSION/g" user-service.yaml
    #     sed -i -e "s/andy2025\/product_service:.*/andy2025\/product_service:$VERSION/g" product-service.yaml
    #     sed -i -e "s/andy2025\/order_service:.*/andy2025\/order_service:$VERSION/g" order-service.yaml
    #     git add -A
    #     git commit -m "Update yaml files to $new_ver"
    #     git push

